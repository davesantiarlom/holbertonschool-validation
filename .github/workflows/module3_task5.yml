---
env:
  GH_TOKEN: ${{ github.token }}
name: module3_task5
"on":
  push:
    tags: "1.0.1"
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'
  pull_request:
    types: [opened, reopened, synchronize]

permissions: read-all

jobs:
  builds:
    permissions: write-all
    name: job1
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install hugo
        run: cd module3_task5 && ./setup.sh
      - name: install markdown
        run: npm install -g markdownlint-cli
      - name: install netlify
        run: npm install netlify-cli -g
      - name: Validate Makefile help
        run: |
          cd module3_task5
          make lint
          make build
          make package
          make unit-tests
          make integration-tests
          make validate
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/1.0.1')
        with:
          files: |
            awesome-website.zip
            DEPLOY.md
          body: |
            # First project
            What is in the archive and how to unarchive it? zip
            What are the commands to start and stop the application? tag
            How to customize where the application logs are written?
            How to verify that the application is running (healthcheck)?
      - run: gh release create v1.0.1 --title "v1.0.1" --notes DEPLOY.md\
            2>/dev/null || echo "OK"
      - name: release drafter
        uses: release-drafter/release-drafter@v5
      - name: netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './module3_task5/dist'
          enable-pull-request-comment: true
          enable-commit-comment: true
          production-branch: main
          overwrite-pull-request-comment: true
          publish-message: 'ðŸŽ‰ Published on'
          deploy-message: 'ðŸš€ Deployed on'
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
